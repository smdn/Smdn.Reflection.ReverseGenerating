<!--
SPDX-FileCopyrightText: 2020 smdn <smdn@smdn.jp>
SPDX-License-Identifier: MIT
-->
<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <TargetFrameworks>net8.0;net6.0;net47;net45;netstandard2.0</TargetFrameworks>
    <RootNamespace>Smdn.Reflection.ReverseGenerating</RootNamespace>
    <VersionPrefix>1.3.0</VersionPrefix>
    <VersionSuffix></VersionSuffix>
    <PackageValidationBaselineVersion>1.0.0</PackageValidationBaselineVersion>
    <RootNamespace/> <!-- empty the root namespace so that the namespace is determined only by the directory name, for code style rule IDE0030 -->
    <Nullable>enable</Nullable>
    <AllowUnsafeBlocks>True</AllowUnsafeBlocks>
    <NoWarn>CS1591;$(NoWarn)</NoWarn> <!-- CS1591: Missing XML comment for publicly visible type or member 'Type_or_Member' -->
    <!-- trimming options -->
    <PublishTrimmed>false</PublishTrimmed>
    <EnableTrimAnalyzer>false</EnableTrimAnalyzer>
  </PropertyGroup>

  <PropertyGroup>
    <DefineConstants Condition="
      !(
        $(TargetFramework.StartsWith('net4')) Or
        $(TargetFramework.StartsWith('netstandard1')) Or
        $(TargetFramework.StartsWith('netstandard2'))
      )
    ">$(DefineConstants);CAN_OVERRIDE_CUSTOMATTRIBUTEDATA_ATTRIBUTETYPE</DefineConstants>
    <!-- enable workaround only on .NET 6.x and .NET 7.x -->
    <DefineConstants Condition="
      $(TargetFramework.StartsWith('net6.')) or
      $(TargetFramework.StartsWith('net7.'))
    ">$(DefineConstants);WORKAROUND_NULLABILITYINFO_BYREFTYPE</DefineConstants>
  </PropertyGroup>

  <PropertyGroup Label="assembly attributes">
    <Description>The reflection library for reverse-generating declarations of types and members.</Description>
    <CopyrightYear>2020</CopyrightYear>
  </PropertyGroup>

  <PropertyGroup Label="package properties">
    <PackageTags>reflection;reverse-generating;reverse-generation;generator</PackageTags>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="System.ValueTuple" Version="4.5.0" Condition="$(TargetFramework.StartsWith('net45')) or $(TargetFramework.StartsWith('net46')) or $(TargetFramework.StartsWith('netstandard1'))" />
    <PackageReference Include="Smdn.Fundamental.Reflection" Version="[3.6.0,4.0.0)" />
  </ItemGroup>

  <ItemGroup>
    <Compile Include="..\Common\System.Runtime.CompilerServices\IsExternalInit.cs" />
  </ItemGroup>
</Project>
